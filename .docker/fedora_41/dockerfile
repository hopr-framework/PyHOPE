# Load the base image
FROM fedora:41

# Numerics research group
LABEL maintainer="numerics@iag.uni-stuttgart.de"

# Setup required packages
RUN dnf makecache && \
    dnf update -y && \
    dnf install -y mesa-libGLU-devel freeglut-devel libXcursor libXinerama && \
    dnf install -y git cmake gcc-c++ gcc-gfortran mpich-devel zlib-ng-devel openblas-devel hdf5-mpich-devel && \
    dnf install -y python3 uv && \
    dnf clean all

# Set architecture argument
ARG ARCH

# Setup uv
ENV UV_LINK_MODE=copy

# Setup MPI
# RUN source /etc/profile && module load mpi
# > Each RUN command in a Dockerfile starts a new shell process, thus Docker
# > does not persist the shell state, including environment modifications
# > such as module load, across RUN commands.
ENV MPI_BIN=/usr/lib64/mpich/bin
ENV MPI_SYSCONFIG=/etc/mpich-${ARCH}
ENV MPI_FORTRAN_MOD_DIR=/usr/lib64/gfortran/modules/mpich
ENV MPI_INCLUDE=/usr/include/mpich-${ARCH}
ENV MPI_LIB=/usr/lib64/mpich/lib
ENV MPI_MAN=/usr/share/man/mpich-${ARCH}
ENV MPI_PYTHON3_SITEARCH=/usr/lib64/python3.13/site-packages/mpich
ENV MPI_COMPILER=mpich-${ARCH}
ENV MPI_SUFFIX=_mpich
ENV MPI_HOME=/usr/lib64/mpich
ENV PATH="/usr/lib64/mpich/bin:$PATH"
ENV LD_LIBRARY_PATH="/usr/lib64/mpich/lib:$LD_LIBRARY_PATH"
ENV MANPATH="/usr/share/man/mpich-${ARCH}:$MANPATH"
ENV PKG_CONFIG_PATH="/usr/lib64/mpich/lib/pkgconfig:PKG_CONFIG_PATH"

# Setup FLEXI
# ADD --keep-git-dir=true "https://github.com/flexi-framework/flexi.git" /flexi
RUN git clone --branch master --single-branch --depth 1 https://github.com/flexi-framework/flexi.git /flexi
WORKDIR /flexi
RUN cmake -B build -DFLEXI_PERFORMANCE=ON -DFLEXI_PERFORMANCE_OPTLIFT=ON -DFLEXI_INSTRUCTION='-march=x86-64 -mtune=generic' && \
    cmake --build build

# Setup FLEXI with PGO
# RUN git clone --branch master --single-branch --depth 1 git@gitlab.iag.uni-stuttgart.de:flexi/codes/pgo.git /pgo
# RUN cmake -B build -DFLEXI_PERFORMANCE=ON -DFLEXI_PERFORMANCE_OPTLIFT=ON -DFLEXI_INSTRUCTION='-march=x86-64 -mtune=generic'
# WORKDIR /flexi/build
# RUN python /pgo/PGO.py
